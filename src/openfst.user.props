<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
<!--
    User settings, to simplify setup. The names and values of make variables
    used by MsBuild scripts are not obvious, so I thought it would be easier
    if the list of user choices in available in a single file.

    All settings are disabled by default. Enable any of them by removing the
    'Condition="false"' part, or change 'false' to 'true'.

    You can instead specify these values in MSBuild command line. For example,
    you can put the following command into a build.cmd file:

    msbuild openfst.sln -v:m -m -t:Build ^
              -p:Platform=x64 ^
              -p:Configuration=Release ^
              -p:PlatformToolset=v141 ^
              -p:WindowsTargetPlatformVersion=10.0.16299.0 ^
              -p:EnableFeatures="far;mpdt;pdt" ^
              -p:EnableEnhancedInstructionSet=AdvancedVectorExtensions
-->
  <PropertyGroup>
  <!--
    Optional features (after ./configure -enable-FEATURE, except without the
    "-fst" suffix present on some of them). All features are compiled
    together, into the same libfst and libfstscript libraries, and produce
    their corresponding binaries if you compile the 'bin' project.

    Supported optional features:
        far         enable FAR extensions

    NOT yet supported:
        const       enable ConstFst extensions
        compact     enable CompactFst extensions
        compress    enable compression extension
        linear      enable LinearTagger/ClassifierFst extensions
        lookahead   enable LookAheadFst extensions
        mpdt        enable MPDT extensions
        ngram       enable NGramFst extension
        pdt         enable PDT extensions
        special     enable special-matcher extensions

    Separate features with the semicolon, for example:

        <EnableFeatures>const;far</EnableFeatures>

    Note: 'configure -enable-grm' enables "far;mpdt;pdt".
  -->

    <EnableFeatures>far</EnableFeatures>

    <!--
      Toolset (default is v141 if not specified).
    -->
    <!-- v140 = 14.0, comes with VS14 aka VS 2015 -->
    <PlatformToolset Condition="false" >v140</PlatformToolset>
    <!-- v141 = 14.1, comes with VS15 aka VS 2017. This is the default. -->
    <PlatformToolset Condition="false" >v141</PlatformToolset>

  <!--
    Enhanced instruction set (default SSE2, I believe).

    NOTE: In kkm's experience, AVX helps the performance a little
    (few % at most), AVX2 does not improve performance further. YMMV:
    Maybe it's our FST structure that does not benefit from optimization.

    Currently, there is no MS c2 codegen for AVX512 instructions.

    Note: cl 32-bit compiler likely does not support AVX/AVX2. -->

    <!-- AVX -->
    <EnableEnhancedInstructionSet Condition="false" >AdvancedVectorExtensions</EnableEnhancedInstructionSet>

    <!-- AVX2 -->
    <EnableEnhancedInstructionSet Condition="false" >AdvancedVectorExtensions2</EnableEnhancedInstructionSet>

  </PropertyGroup>
</Project>
